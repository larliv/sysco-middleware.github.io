I"c_<p>After have installed Oracle SOA Suite over and over again, you start to finding out that these are boilerplate tasks and do not generate much value, because this are only the initial step to implement solutions with SOA and BPM.</p>

<p>In this post I will show you how to automate these steps using Chef.</p>

<p>Chef is a software provisioning tool that enable transform infrastructure as code.</p>

<p>The goal is prepare a development environment with Oracle BPM Suite on Windows including the following components installed and configured:</p>

<ul>
  <li>Oracle WebLogic Server 10.3.6</li>
  <li>Oracle SOA Suite 11.1.1.7 (SOA, BPM and BAM)</li>
  <li>a BPM Domain with one server with SOA and BPM (Admin Server) and other server with BAM (optional)</li>
</ul>

<h2 id="chef">Chef</h2>

<p>Chef, as its name says, is a tool that enable us to create and use “Cookbooks” which includes “Recipes”. Each “Recipe” includes a set of procedures called “Resources”. This “Resources” are the more basic elements in Chef and represent a combination of a Component and a desired Status. For example:</p>

<blockquote>
  <p>Literal:
We require the Apache HTTP Service started.</p>
</blockquote>

<blockquote>
  <p>With Chef:</p>
</blockquote>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">service</span> <span class="s2">"apache"</span> <span class="k">do</span>  
      <span class="n">action</span> <span class="ss">:start</span>  
    <span class="k">end</span>
</code></pre></div></div>

<p>Then, as a Chef, we can combine several recipes to cook our infrastructure. This list of recipes and its order are called “Run Lists”.</p>

<p>Chef has two approaches to execute recipes: “Client/Server” and “Chef Solo”. Opscode offer a cloud service to host our Chef Server or we can install our own Chef Server. The Chef Client has two possible ways to work, as a Server client, or as a standalone tool called “Chef Solo”. I recommend the Chef Solo approach to start learning Chef.</p>

<p>As Chef there are some really good tools, like Puppet and Ansible, that can help you with provisioning tasks.</p>

<h3 id="requisites">Requisites:</h3>

<ul>
  <li>JDK 7 installed.</li>
  <li>Oracle XE installed</li>
  <li>SOA database schemas created with RCU</li>
  <li>Chef Client installed</li>
</ul>

<h2 id="steps">Steps</h2>

<p>I have created the recipes to install Oracle WebLogic Server and Oracle SOA Suite, and other recipe to create a domain.</p>

<h3 id="chef-directory-structure">Chef directory structure</h3>

<p>After install Chef Client, we can use the Knife tool to create a cookbook:</p>

<p><img src="/images/2014-04-03-oracle-soa-bpm-chef-windows/knife.png" alt="Chef Client" /></p>

<p>For example, in this case we create a Cookbook for Fusion Middleware domains, where we will save our recipes to create or modify domains:</p>

<p><img src="/images/2014-04-03-oracle-soa-bpm-chef-windows/knife-fmw.png" alt="Chef Cookbook" /></p>

<p><img src="/images/2014-04-03-oracle-soa-bpm-chef-windows/directory.png" alt="Chef Cookbook Directory" /></p>

<p>The main directories are:</p>

<ul>
  <li><strong>recipes</strong>: where our recipes are</li>
  <li><strong>attributes</strong>: files with properties used by recipes</li>
  <li><strong>templates</strong>: able to be combined with attributes to create new files.</li>
</ul>

<h3 id="cookbooks">Cookbooks</h3>

<p>In this post, I have created 3 cookbooks:</p>

<p><img src="/images/2014-04-03-oracle-soa-bpm-chef-windows/cookbooks.png" alt="Chef Cookbooks" /></p>

<ul>
  <li><strong>oracle-weblogic</strong>: includes the recipes to install and configure WLS.</li>
  <li><strong>oracle-soa-suite</strong>: the same for SOA Suite.</li>
  <li><strong>oracle-fmw-domain</strong>: recipes to create and modify Fusion Middleware’s domains.</li>
</ul>

<h3 id="recipes">Recipes</h3>

<p>Each Cookbook could have several recipes. For example, in WebLogic’s cookbook I can create a recipe to install 10g version, another recipe to upgrade to 11g, anothe to install some patch and so on.</p>

<table>
  <thead>
    <tr>
      <th>Cookbook</th>
      <th>Recipe</th>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>oracle-weblogic</td>
      <td>install-wls-10.3.6</td>
      <td>oracle-weblogic::install-wls-10.3.6</td>
      <td>Installs WLS</td>
    </tr>
    <tr>
      <td>oracle-soa-suite</td>
      <td>install-soa-11.1.1.7</td>
      <td>oracle-soa-suite::install-soa-11.1.1.7</td>
      <td>Installs Oracle SOA Suite</td>
    </tr>
    <tr>
      <td>oracle-fmw-domain</td>
      <td>create-domain-soabpm-dev</td>
      <td>oracle-fmw-domain::create-domain-soabpm-dev</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<p>Let’s go to check how the recipe’s code is to run the “Run List” and create our development environment.</p>

<h3 id="resources">Resources</h3>

<h4 id="resource-template">Resource: <em>Template</em></h4>

<p>As any template, this resource is used to create new files based on recipe attributes. For exaple: To install WLS in silent-mode, we need to create a XML file with information about directories, JDK path, etc.</p>

<p>A template like this:</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
    <span class="nt">&lt;bea-installer&gt;</span>
      <span class="nt">&lt;input-fields&gt;</span>
        <span class="nt">&lt;data-value</span> <span class="na">name=</span><span class="s">"BEAHOME"</span> <span class="na">value=</span><span class="s">"&lt;%= @mw_home %&gt;"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data-value</span> <span class="na">name=</span><span class="s">"WLS_INSTALL_DIR"</span> <span class="na">value=</span><span class="s">"&lt;%= @wls_home %&gt;"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data-value</span> <span class="na">name=</span><span class="s">"COMPONENT_PATHS"</span> <span class="na">value=</span><span class="s">"WebLogic Server/Core Application Server|WebLogic Server/Administration Console|WebLogic Server/Configuration Wizard and Upgrade Framework|WebLogic Server/Web 2.0 HTTP Pub-Sub Server|WebLogic Server/WebLogic SCA|WebLogic Server/WebLogic JDBC Drivers|WebLogic Server/Third Party JDBC Drivers|WebLogic Server/WebLogic Server Clients|WebLogic Server/WebLogic Web Server Plugins|WebLogic Server/UDDI and Xquery Support|WebLogic Server/Evaluation Database|WebLogic Server/Server Examples|Oracle Coherence/Coherence Product Files"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/input-fields&gt;</span>
    <span class="nt">&lt;/bea-installer&gt;</span>
</code></pre></div></div>

<p>And each &lt;%= @variable_name %&gt; will be replaced with recipe variables:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">template</span> <span class="n">weblogic_response</span> <span class="k">do</span>  
          <span class="n">source</span> <span class="s2">"weblogic_response.erb"</span>  
          <span class="n">rights</span> <span class="ss">:full_control</span><span class="p">,</span> <span class="n">user</span>  
          <span class="n">variables</span><span class="p">({</span>  
               <span class="ss">:middleware_home</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"middleware_home"</span><span class="p">],</span>  
               <span class="ss">:weblogic_home</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"weblogic_home"</span><span class="p">],</span>  
               <span class="ss">:java_home</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"java_home"</span><span class="p">]</span>  
          <span class="p">})</span>  
    <span class="k">end</span>
</code></pre></div></div>

<p>And these values come from attributes file:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"middleware_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"weblogic_home"</span><span class="p">]</span> <span class="o">=</span> <span class="n">node</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"middleware_home"</span><span class="p">]</span> <span class="o">+</span> <span class="s2">"/wlserver_10.3"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"java_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/oracle/java/jdk1.7.0_51"</span>
</code></pre></div></div>

<h3 id="resource-execute">Resource: <em>Execute</em></h3>

<p>Another important resource is Execute which let you execute commands on OS. For example: the commands to start the installation, etc.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1"># Install script  </span>
    <span class="n">run_command</span> <span class="o">=</span> <span class="n">node</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"soa_tmp_dir"</span><span class="p">]</span> <span class="o">+</span> <span class="s2">"/Disk1/install/win64/setup.exe -jreLoc "</span> <span class="o">+</span> <span class="n">node</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"java_home"</span><span class="p">]</span> <span class="o">+</span> <span class="s2">" -silent -response "</span> <span class="o">+</span> <span class="n">oracle_soa_response</span>  

    <span class="c1"># Run installer  </span>
    <span class="n">execute</span> <span class="n">run_command</span> <span class="k">do</span>  
      <span class="n">action</span> <span class="ss">:run</span>  
      <span class="n">not_if</span> <span class="k">do</span>   
           <span class="no">FileTest</span><span class="p">.</span><span class="nf">directory?</span><span class="p">(</span><span class="n">node</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"oracle_soa_home"</span><span class="p">])</span>   
      <span class="k">end</span>  
    <span class="k">end</span>
</code></pre></div></div>

<p>Here, we define the command that trigger the SOA Suite installation called “run_command”, only if the SOA directory doesn’t exist.</p>

<h2 id="execution">Execution</h2>

<p>To start the installation, first we must have Chef Client installed and then we must check the attributes to align these with our requirements.</p>

<p>To do this, we should enter WebLogic cookbook and then enter attributes directory:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1"># User who installs the software  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"user"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"JEQO"</span>  
    <span class="c1"># Where weblogic would be installed  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"directories"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span>  
      <span class="s2">"C:/u01"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw/soabpm"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7/tmp"</span>  
    <span class="p">]</span>  
    <span class="c1"># Oracle Homes  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"middleware_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"weblogic_home"</span><span class="p">]</span> <span class="o">=</span> <span class="n">node</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"middleware_home"</span><span class="p">]</span> <span class="o">+</span> <span class="s2">"/wlserver_10.3"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"java_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/oracle/java/jdk1.7.0_51"</span>  
    <span class="c1"># WebLogic installer http://download.oracle.com/otn/nt/middleware/11g/wls/1036/wls1036_generic.jar  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"wls_installation"</span><span class="p">][</span><span class="s2">"installer"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/oracle/fmw/installers/wls/wls1036_generic.jar"</span>
</code></pre></div></div>

<p>In the same manner, we can enter SOA Cookbook attributes directory and check the files:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1"># Oracle Homes  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"middleware_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"oracle_soa_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7/oracle_soa"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"java_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/oracle/java/jdk1.7.0_51"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"soa_tmp_dir"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7/tmp/soa"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"directories"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span>  
      <span class="s2">"C:/u01"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw/soabpm"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7/tmp"</span><span class="p">,</span>  
      <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7/tmp/soa"</span>  
    <span class="p">]</span>  
    <span class="c1"># Installers. http://www.oracle.com/technetwork/middleware/bpm/downloads/index.html  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"installer_zips"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span>  
      <span class="s2">"C:/oracle/fmw/installers/soa/ofm_soa_generic_11.1.1.7.0_disk1_1of2.zip"</span><span class="p">,</span>  
      <span class="s2">"C:/oracle/fmw/installers/soa/ofm_soa_generic_11.1.1.7.0_disk1_2of2.zip"</span>  
    <span class="p">]</span>  
    <span class="c1"># User who installs the software  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"soa_installation"</span><span class="p">][</span><span class="s2">"user"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"JEQO"</span>

</code></pre></div></div>

<p>To define the domain attributes, enter FMW Domains/attributes and check the files:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1"># Oracle Homes  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"middleware_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"oracle_common_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7/oracle_common"</span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"oracle_soa_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7/oracle_soa"</span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"weblogic_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/fmw/soabpm/11.1.1.7/wlserver_10.3"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"java_home"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/oracle/java/jdk1.7.0_51"</span>  
    <span class="c1"># BPM server  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"bpm_server_name"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"bpm_server01"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"bpm_server_port"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">7001</span>  
    <span class="c1"># Domain info  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"domain_name"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"dev_soabpm_domain"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"domain_directory"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/work/soabpm/11.1.1.7/domains"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"app_directory"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"C:/u01/oracle/work/soabpm/11.1.1.7/apps"</span>  
    <span class="c1"># Metadata schemas  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"db_host"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"localhost"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"db_port"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1521</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"db_service"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"xe"</span>  
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"db_schema_prefix"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"DEVBPM"</span>  
    <span class="c1"># BAM?  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"bam_enabled"</span><span class="p">]</span> <span class="o">=</span> <span class="kp">true</span>  
    <span class="c1"># User  </span>
    <span class="n">default</span><span class="p">[</span><span class="s2">"fmw_domain"</span><span class="p">][</span><span class="s2">"user"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"JEQO"</span>
</code></pre></div></div>

<p>At the end, we should validate Chef executables are included in the PATH environment variable to execute the script “install_soabpm.cmd” that contains the following commands:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    chef-solo <span class="nt">-c</span> solo.rb <span class="nt">-j</span> node_soabpm.json
</code></pre></div></div>

<p>Where solo.rb contains Chef basic parameters and the JSON file contains the “run list” to execute recipes:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">    </span><span class="p">{</span><span class="w">  
      </span><span class="nl">"run_list"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">   
           </span><span class="s2">"recipe[oracle-weblogic::install-wls-10.3.6]"</span><span class="p">,</span><span class="w">   
           </span><span class="s2">"recipe[oracle-soa-suite::install-soa-11.1.1.7]"</span><span class="p">,</span><span class="w">  
           </span><span class="s2">"recipe[oracle-fmw-domain::create-domain-soabpm-dev]"</span><span class="w">  
      </span><span class="p">]</span><span class="w">  
    </span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>To start the installation we should open a command-line as Adminsitrator and run the “install_soabpm.cmd”:</p>

<p><img src="/images/2014-04-03-oracle-soa-bpm-chef-windows/inicio_chef.png" alt="Run command - 1" /></p>

<p><img src="/images/2014-04-03-oracle-soa-bpm-chef-windows/fin_chef.png" alt="Run command - 2" /></p>

<p><img src="/images/2014-04-03-oracle-soa-bpm-chef-windows/8min.png" alt="Run command - 3" /></p>

<p>After about 8 minutes you can start your BPM server :-)</p>

<h2 id="conclusions">Conclusions</h2>

<p>With Chef or Puppet tools and Vagrant (who provides VMs) is possible to automate almost all the installation and configuration tasks required to prepare environments dynamically, transforming knowledge into reusable code and this code could be improved over time.</p>

<h2 id="resources-1">Resources</h2>

<p>The source code is shared on <a href="https://github.com/jeqo/cookbooks">GitHub</a>
The best resources I found to <a href="https://learnchef.opscode.com/">learn Chef</a></p>
:ET